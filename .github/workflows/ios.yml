name: "Build"

on:
  push:
    branches: [bump-v*]
  workflow_dispatch:
    branches: [bump-v*]

jobs:
  build_with_signing:
    runs-on: macos-26
    steps:
      - name: select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_26.0.app
      # this was more debug as was curious what came pre-installed
      # GitHub shares this online, e.g. https://github.com/actions/runner-images/blob/macOS-12/20230224.1/images/macos/macos-12-Readme.md
      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: checkout repository
        uses: actions/checkout@v3

      - name: Extract version from branch name
        id: extract_version
        run: |
          BRANCH_NAME="${GITHUB_REF_NAME}"
          VERSION="${BRANCH_NAME#bump-v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update MARKETING_VERSION and PRODUCT_BUNDLE_IDENTIFIER
        run: |
          PBXPROJ_PATH="$(find . -name project.pbxproj | head -n 1)"
          echo "Updating MARKETING_VERSION and PRODUCT_BUNDLE_IDENTIFIER in $PBXPROJ_PATH"
          # Bundle identifier
          sed -i '' "s/com.alliston.GameNet-2026/com.neicex9253.sign/" "$PBXPROJ_PATH"
          # MARKETING_VERSION
          sed -i '' "s/MARKETING_VERSION = [0-9.]\+;/MARKETING_VERSION = $VERSION;/" "$PBXPROJ_PATH"

      - name: Commit updated version and bundle identifier
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "[CI/CD] v$VERSION" || echo "No changes to commit"
          git push origin HEAD

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles          

      - name: build archive
        run: |
          xcodebuild -scheme "GameNet" \
          -archivePath $RUNNER_TEMP/GameNet.xcarchive \
          -sdk iphoneos \
          -configuration Debug \
          -destination generic/platform=iOS \
          clean archive          

      - name: export ipa
        env:
          EXPORT_OPTIONS_PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST }}
        run: |
          EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH
          xcodebuild -exportArchive -archivePath $RUNNER_TEMP/GameNet.xcarchive -exportOptionsPlist $EXPORT_OPTS_PATH -exportPath $RUNNER_TEMP/build          

      - name: Upload application
        uses: actions/upload-artifact@v4
        with:
          name: GameNet
          path: ${{ runner.temp }}/build/GameNet.ipa
          # you can also archive the entire directory 
          # path: ${{ runner.temp }}/build
          retention-days: 3